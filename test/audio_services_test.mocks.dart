// Mocks generated by Mockito 5.4.6 from annotations
// in needu/test/audio_services_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:io' as _i10;
import 'dart:typed_data' as _i12;

import 'package:audioplayers/audioplayers.dart' as _i3;
import 'package:firebase_auth/firebase_auth.dart' as _i9;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i8;
import 'package:firebase_core/firebase_core.dart' as _i5;
import 'package:firebase_storage/firebase_storage.dart' as _i6;
import 'package:firebase_storage_platform_interface/firebase_storage_platform_interface.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i13;
import 'package:record/src/record.dart' as _i11;
import 'package:record_platform_interface/record_platform_interface.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeAmplitude_0 extends _i1.SmartFake implements _i2.Amplitude {
  _FakeAmplitude_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAudioCache_1 extends _i1.SmartFake implements _i3.AudioCache {
  _FakeAudioCache_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCompleter_2<T> extends _i1.SmartFake implements _i4.Completer<T> {
  _FakeCompleter_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseApp_3 extends _i1.SmartFake implements _i5.FirebaseApp {
  _FakeFirebaseApp_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDuration_4 extends _i1.SmartFake implements Duration {
  _FakeDuration_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeReference_5 extends _i1.SmartFake implements _i6.Reference {
  _FakeReference_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseStorage_6 extends _i1.SmartFake
    implements _i6.FirebaseStorage {
  _FakeFirebaseStorage_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFullMetadata_7 extends _i1.SmartFake implements _i7.FullMetadata {
  _FakeFullMetadata_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeListResult_8 extends _i1.SmartFake implements _i6.ListResult {
  _FakeListResult_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUploadTask_9 extends _i1.SmartFake implements _i6.UploadTask {
  _FakeUploadTask_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDownloadTask_10 extends _i1.SmartFake implements _i6.DownloadTask {
  _FakeDownloadTask_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTaskSnapshot_11 extends _i1.SmartFake implements _i6.TaskSnapshot {
  _FakeTaskSnapshot_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_12<T> extends _i1.SmartFake implements _i4.Future<T> {
  _FakeFuture_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserMetadata_13 extends _i1.SmartFake implements _i8.UserMetadata {
  _FakeUserMetadata_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMultiFactor_14 extends _i1.SmartFake implements _i9.MultiFactor {
  _FakeMultiFactor_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdTokenResult_15 extends _i1.SmartFake implements _i8.IdTokenResult {
  _FakeIdTokenResult_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserCredential_16 extends _i1.SmartFake
    implements _i9.UserCredential {
  _FakeUserCredential_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConfirmationResult_17 extends _i1.SmartFake
    implements _i9.ConfirmationResult {
  _FakeConfirmationResult_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_18 extends _i1.SmartFake implements _i9.User {
  _FakeUser_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeActionCodeInfo_19 extends _i1.SmartFake
    implements _i8.ActionCodeInfo {
  _FakeActionCodeInfo_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePasswordValidationStatus_20 extends _i1.SmartFake
    implements _i8.PasswordValidationStatus {
  _FakePasswordValidationStatus_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUri_21 extends _i1.SmartFake implements Uri {
  _FakeUri_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDirectory_22 extends _i1.SmartFake implements _i10.Directory {
  _FakeDirectory_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFileSystemEntity_23 extends _i1.SmartFake
    implements _i10.FileSystemEntity {
  _FakeFileSystemEntity_23(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFileStat_24 extends _i1.SmartFake implements _i10.FileStat {
  _FakeFileStat_24(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AudioRecorder].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioRecorder extends _i1.Mock implements _i11.AudioRecorder {
  MockAudioRecorder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> start(_i2.RecordConfig? config, {required String? path}) =>
      (super.noSuchMethod(
            Invocation.method(#start, [config], {#path: path}),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i4.Stream<_i12.Uint8List>> startStream(
    _i2.RecordConfig? config,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#startStream, [config]),
            returnValue: _i4.Future<_i4.Stream<_i12.Uint8List>>.value(
              _i4.Stream<_i12.Uint8List>.empty(),
            ),
          )
          as _i4.Future<_i4.Stream<_i12.Uint8List>>);

  @override
  _i4.Future<String?> stop() =>
      (super.noSuchMethod(
            Invocation.method(#stop, []),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<void> cancel() =>
      (super.noSuchMethod(
            Invocation.method(#cancel, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> pause() =>
      (super.noSuchMethod(
            Invocation.method(#pause, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> resume() =>
      (super.noSuchMethod(
            Invocation.method(#resume, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<bool> isRecording() =>
      (super.noSuchMethod(
            Invocation.method(#isRecording, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> isPaused() =>
      (super.noSuchMethod(
            Invocation.method(#isPaused, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> hasPermission() =>
      (super.noSuchMethod(
            Invocation.method(#hasPermission, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<List<_i2.InputDevice>> listInputDevices() =>
      (super.noSuchMethod(
            Invocation.method(#listInputDevices, []),
            returnValue: _i4.Future<List<_i2.InputDevice>>.value(
              <_i2.InputDevice>[],
            ),
          )
          as _i4.Future<List<_i2.InputDevice>>);

  @override
  _i4.Future<_i2.Amplitude> getAmplitude() =>
      (super.noSuchMethod(
            Invocation.method(#getAmplitude, []),
            returnValue: _i4.Future<_i2.Amplitude>.value(
              _FakeAmplitude_0(this, Invocation.method(#getAmplitude, [])),
            ),
          )
          as _i4.Future<_i2.Amplitude>);

  @override
  _i4.Future<bool> isEncoderSupported(_i2.AudioEncoder? encoder) =>
      (super.noSuchMethod(
            Invocation.method(#isEncoderSupported, [encoder]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Stream<_i2.RecordState> onStateChanged() =>
      (super.noSuchMethod(
            Invocation.method(#onStateChanged, []),
            returnValue: _i4.Stream<_i2.RecordState>.empty(),
          )
          as _i4.Stream<_i2.RecordState>);

  @override
  _i4.Stream<_i2.Amplitude> onAmplitudeChanged(Duration? interval) =>
      (super.noSuchMethod(
            Invocation.method(#onAmplitudeChanged, [interval]),
            returnValue: _i4.Stream<_i2.Amplitude>.empty(),
          )
          as _i4.Stream<_i2.Amplitude>);

  @override
  List<int> convertBytesToInt16(
    _i12.Uint8List? bytes, [
    dynamic endian = _i12.Endian.little,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#convertBytesToInt16, [bytes, endian]),
            returnValue: <int>[],
          )
          as List<int>);
}

/// A class which mocks [AudioPlayer].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioPlayer extends _i1.Mock implements _i3.AudioPlayer {
  MockAudioPlayer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AudioCache get audioCache =>
      (super.noSuchMethod(
            Invocation.getter(#audioCache),
            returnValue: _FakeAudioCache_1(
              this,
              Invocation.getter(#audioCache),
            ),
          )
          as _i3.AudioCache);

  @override
  String get playerId =>
      (super.noSuchMethod(
            Invocation.getter(#playerId),
            returnValue: _i13.dummyValue<String>(
              this,
              Invocation.getter(#playerId),
            ),
          )
          as String);

  @override
  double get volume =>
      (super.noSuchMethod(Invocation.getter(#volume), returnValue: 0.0)
          as double);

  @override
  double get balance =>
      (super.noSuchMethod(Invocation.getter(#balance), returnValue: 0.0)
          as double);

  @override
  double get playbackRate =>
      (super.noSuchMethod(Invocation.getter(#playbackRate), returnValue: 0.0)
          as double);

  @override
  _i3.PlayerMode get mode =>
      (super.noSuchMethod(
            Invocation.getter(#mode),
            returnValue: _i3.PlayerMode.mediaPlayer,
          )
          as _i3.PlayerMode);

  @override
  _i3.ReleaseMode get releaseMode =>
      (super.noSuchMethod(
            Invocation.getter(#releaseMode),
            returnValue: _i3.ReleaseMode.release,
          )
          as _i3.ReleaseMode);

  @override
  _i3.PlayerState get desiredState =>
      (super.noSuchMethod(
            Invocation.getter(#desiredState),
            returnValue: _i3.PlayerState.stopped,
          )
          as _i3.PlayerState);

  @override
  _i3.PlayerState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i3.PlayerState.stopped,
          )
          as _i3.PlayerState);

  @override
  _i4.Completer<void> get creatingCompleter =>
      (super.noSuchMethod(
            Invocation.getter(#creatingCompleter),
            returnValue: _FakeCompleter_2<void>(
              this,
              Invocation.getter(#creatingCompleter),
            ),
          )
          as _i4.Completer<void>);

  @override
  _i4.Stream<_i3.AudioEvent> get eventStream =>
      (super.noSuchMethod(
            Invocation.getter(#eventStream),
            returnValue: _i4.Stream<_i3.AudioEvent>.empty(),
          )
          as _i4.Stream<_i3.AudioEvent>);

  @override
  _i4.Stream<_i3.PlayerState> get onPlayerStateChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onPlayerStateChanged),
            returnValue: _i4.Stream<_i3.PlayerState>.empty(),
          )
          as _i4.Stream<_i3.PlayerState>);

  @override
  _i4.Stream<Duration> get onPositionChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onPositionChanged),
            returnValue: _i4.Stream<Duration>.empty(),
          )
          as _i4.Stream<Duration>);

  @override
  _i4.Stream<Duration> get onDurationChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onDurationChanged),
            returnValue: _i4.Stream<Duration>.empty(),
          )
          as _i4.Stream<Duration>);

  @override
  _i4.Stream<void> get onPlayerComplete =>
      (super.noSuchMethod(
            Invocation.getter(#onPlayerComplete),
            returnValue: _i4.Stream<void>.empty(),
          )
          as _i4.Stream<void>);

  @override
  _i4.Stream<void> get onSeekComplete =>
      (super.noSuchMethod(
            Invocation.getter(#onSeekComplete),
            returnValue: _i4.Stream<void>.empty(),
          )
          as _i4.Stream<void>);

  @override
  _i4.Stream<String> get onLog =>
      (super.noSuchMethod(
            Invocation.getter(#onLog),
            returnValue: _i4.Stream<String>.empty(),
          )
          as _i4.Stream<String>);

  @override
  set audioCache(_i3.AudioCache? value) => super.noSuchMethod(
    Invocation.setter(#audioCache, value),
    returnValueForMissingStub: null,
  );

  @override
  set desiredState(_i3.PlayerState? value) => super.noSuchMethod(
    Invocation.setter(#desiredState, value),
    returnValueForMissingStub: null,
  );

  @override
  set state(_i3.PlayerState? state) => super.noSuchMethod(
    Invocation.setter(#state, state),
    returnValueForMissingStub: null,
  );

  @override
  set positionUpdater(_i3.PositionUpdater? positionUpdater) =>
      super.noSuchMethod(
        Invocation.setter(#positionUpdater, positionUpdater),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> play(
    _i3.Source? source, {
    double? volume,
    double? balance,
    _i3.AudioContext? ctx,
    Duration? position,
    _i3.PlayerMode? mode,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #play,
              [source],
              {
                #volume: volume,
                #balance: balance,
                #ctx: ctx,
                #position: position,
                #mode: mode,
              },
            ),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setAudioContext(_i3.AudioContext? ctx) =>
      (super.noSuchMethod(
            Invocation.method(#setAudioContext, [ctx]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setPlayerMode(_i3.PlayerMode? mode) =>
      (super.noSuchMethod(
            Invocation.method(#setPlayerMode, [mode]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> pause() =>
      (super.noSuchMethod(
            Invocation.method(#pause, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> stop() =>
      (super.noSuchMethod(
            Invocation.method(#stop, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> resume() =>
      (super.noSuchMethod(
            Invocation.method(#resume, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> release() =>
      (super.noSuchMethod(
            Invocation.method(#release, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> seek(Duration? position) =>
      (super.noSuchMethod(
            Invocation.method(#seek, [position]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setBalance(double? balance) =>
      (super.noSuchMethod(
            Invocation.method(#setBalance, [balance]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setVolume(double? volume) =>
      (super.noSuchMethod(
            Invocation.method(#setVolume, [volume]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setReleaseMode(_i3.ReleaseMode? releaseMode) =>
      (super.noSuchMethod(
            Invocation.method(#setReleaseMode, [releaseMode]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setPlaybackRate(double? playbackRate) =>
      (super.noSuchMethod(
            Invocation.method(#setPlaybackRate, [playbackRate]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setSource(_i3.Source? source) =>
      (super.noSuchMethod(
            Invocation.method(#setSource, [source]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setSourceUrl(String? url, {String? mimeType}) =>
      (super.noSuchMethod(
            Invocation.method(#setSourceUrl, [url], {#mimeType: mimeType}),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setSourceDeviceFile(String? path, {String? mimeType}) =>
      (super.noSuchMethod(
            Invocation.method(
              #setSourceDeviceFile,
              [path],
              {#mimeType: mimeType},
            ),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setSourceAsset(String? path, {String? mimeType}) =>
      (super.noSuchMethod(
            Invocation.method(#setSourceAsset, [path], {#mimeType: mimeType}),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setSourceBytes(_i12.Uint8List? bytes, {String? mimeType}) =>
      (super.noSuchMethod(
            Invocation.method(#setSourceBytes, [bytes], {#mimeType: mimeType}),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<Duration?> getDuration() =>
      (super.noSuchMethod(
            Invocation.method(#getDuration, []),
            returnValue: _i4.Future<Duration?>.value(),
          )
          as _i4.Future<Duration?>);

  @override
  _i4.Future<Duration?> getCurrentPosition() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentPosition, []),
            returnValue: _i4.Future<Duration?>.value(),
          )
          as _i4.Future<Duration?>);

  @override
  _i4.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [FirebaseStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseStorage extends _i1.Mock implements _i6.FirebaseStorage {
  MockFirebaseStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_3(this, Invocation.getter(#app)),
          )
          as _i5.FirebaseApp);

  @override
  String get bucket =>
      (super.noSuchMethod(
            Invocation.getter(#bucket),
            returnValue: _i13.dummyValue<String>(
              this,
              Invocation.getter(#bucket),
            ),
          )
          as String);

  @override
  Duration get maxOperationRetryTime =>
      (super.noSuchMethod(
            Invocation.getter(#maxOperationRetryTime),
            returnValue: _FakeDuration_4(
              this,
              Invocation.getter(#maxOperationRetryTime),
            ),
          )
          as Duration);

  @override
  Duration get maxUploadRetryTime =>
      (super.noSuchMethod(
            Invocation.getter(#maxUploadRetryTime),
            returnValue: _FakeDuration_4(
              this,
              Invocation.getter(#maxUploadRetryTime),
            ),
          )
          as Duration);

  @override
  Duration get maxDownloadRetryTime =>
      (super.noSuchMethod(
            Invocation.getter(#maxDownloadRetryTime),
            returnValue: _FakeDuration_4(
              this,
              Invocation.getter(#maxDownloadRetryTime),
            ),
          )
          as Duration);

  @override
  set app(_i5.FirebaseApp? value) => super.noSuchMethod(
    Invocation.setter(#app, value),
    returnValueForMissingStub: null,
  );

  @override
  set bucket(String? value) => super.noSuchMethod(
    Invocation.setter(#bucket, value),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i6.Reference ref([String? path]) =>
      (super.noSuchMethod(
            Invocation.method(#ref, [path]),
            returnValue: _FakeReference_5(
              this,
              Invocation.method(#ref, [path]),
            ),
          )
          as _i6.Reference);

  @override
  _i6.Reference refFromURL(String? url) =>
      (super.noSuchMethod(
            Invocation.method(#refFromURL, [url]),
            returnValue: _FakeReference_5(
              this,
              Invocation.method(#refFromURL, [url]),
            ),
          )
          as _i6.Reference);

  @override
  void setMaxOperationRetryTime(Duration? time) => super.noSuchMethod(
    Invocation.method(#setMaxOperationRetryTime, [time]),
    returnValueForMissingStub: null,
  );

  @override
  void setMaxUploadRetryTime(Duration? time) => super.noSuchMethod(
    Invocation.method(#setMaxUploadRetryTime, [time]),
    returnValueForMissingStub: null,
  );

  @override
  void setMaxDownloadRetryTime(Duration? time) => super.noSuchMethod(
    Invocation.method(#setMaxDownloadRetryTime, [time]),
    returnValueForMissingStub: null,
  );

  @override
  _i4.Future<void> useStorageEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #useStorageEmulator,
              [host, port],
              {#automaticHostMapping: automaticHostMapping},
            ),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [Reference].
///
/// See the documentation for Mockito's code generation for more information.
class MockReference extends _i1.Mock implements _i6.Reference {
  MockReference() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.FirebaseStorage get storage =>
      (super.noSuchMethod(
            Invocation.getter(#storage),
            returnValue: _FakeFirebaseStorage_6(
              this,
              Invocation.getter(#storage),
            ),
          )
          as _i6.FirebaseStorage);

  @override
  String get bucket =>
      (super.noSuchMethod(
            Invocation.getter(#bucket),
            returnValue: _i13.dummyValue<String>(
              this,
              Invocation.getter(#bucket),
            ),
          )
          as String);

  @override
  String get fullPath =>
      (super.noSuchMethod(
            Invocation.getter(#fullPath),
            returnValue: _i13.dummyValue<String>(
              this,
              Invocation.getter(#fullPath),
            ),
          )
          as String);

  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i13.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
          )
          as String);

  @override
  _i6.Reference get root =>
      (super.noSuchMethod(
            Invocation.getter(#root),
            returnValue: _FakeReference_5(this, Invocation.getter(#root)),
          )
          as _i6.Reference);

  @override
  _i6.Reference child(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#child, [path]),
            returnValue: _FakeReference_5(
              this,
              Invocation.method(#child, [path]),
            ),
          )
          as _i6.Reference);

  @override
  _i4.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String> getDownloadURL() =>
      (super.noSuchMethod(
            Invocation.method(#getDownloadURL, []),
            returnValue: _i4.Future<String>.value(
              _i13.dummyValue<String>(
                this,
                Invocation.method(#getDownloadURL, []),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<_i7.FullMetadata> getMetadata() =>
      (super.noSuchMethod(
            Invocation.method(#getMetadata, []),
            returnValue: _i4.Future<_i7.FullMetadata>.value(
              _FakeFullMetadata_7(this, Invocation.method(#getMetadata, [])),
            ),
          )
          as _i4.Future<_i7.FullMetadata>);

  @override
  _i4.Future<_i6.ListResult> list([_i7.ListOptions? options]) =>
      (super.noSuchMethod(
            Invocation.method(#list, [options]),
            returnValue: _i4.Future<_i6.ListResult>.value(
              _FakeListResult_8(this, Invocation.method(#list, [options])),
            ),
          )
          as _i4.Future<_i6.ListResult>);

  @override
  _i4.Future<_i6.ListResult> listAll() =>
      (super.noSuchMethod(
            Invocation.method(#listAll, []),
            returnValue: _i4.Future<_i6.ListResult>.value(
              _FakeListResult_8(this, Invocation.method(#listAll, [])),
            ),
          )
          as _i4.Future<_i6.ListResult>);

  @override
  _i4.Future<_i12.Uint8List?> getData([int? maxSize = 10485760]) =>
      (super.noSuchMethod(
            Invocation.method(#getData, [maxSize]),
            returnValue: _i4.Future<_i12.Uint8List?>.value(),
          )
          as _i4.Future<_i12.Uint8List?>);

  @override
  _i6.UploadTask putData(
    _i12.Uint8List? data, [
    _i7.SettableMetadata? metadata,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#putData, [data, metadata]),
            returnValue: _FakeUploadTask_9(
              this,
              Invocation.method(#putData, [data, metadata]),
            ),
          )
          as _i6.UploadTask);

  @override
  _i6.UploadTask putBlob(dynamic blob, [_i7.SettableMetadata? metadata]) =>
      (super.noSuchMethod(
            Invocation.method(#putBlob, [blob, metadata]),
            returnValue: _FakeUploadTask_9(
              this,
              Invocation.method(#putBlob, [blob, metadata]),
            ),
          )
          as _i6.UploadTask);

  @override
  _i6.UploadTask putFile(_i10.File? file, [_i7.SettableMetadata? metadata]) =>
      (super.noSuchMethod(
            Invocation.method(#putFile, [file, metadata]),
            returnValue: _FakeUploadTask_9(
              this,
              Invocation.method(#putFile, [file, metadata]),
            ),
          )
          as _i6.UploadTask);

  @override
  _i6.UploadTask putString(
    String? data, {
    _i7.PutStringFormat? format = _i7.PutStringFormat.raw,
    _i7.SettableMetadata? metadata,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #putString,
              [data],
              {#format: format, #metadata: metadata},
            ),
            returnValue: _FakeUploadTask_9(
              this,
              Invocation.method(
                #putString,
                [data],
                {#format: format, #metadata: metadata},
              ),
            ),
          )
          as _i6.UploadTask);

  @override
  _i4.Future<_i7.FullMetadata> updateMetadata(_i7.SettableMetadata? metadata) =>
      (super.noSuchMethod(
            Invocation.method(#updateMetadata, [metadata]),
            returnValue: _i4.Future<_i7.FullMetadata>.value(
              _FakeFullMetadata_7(
                this,
                Invocation.method(#updateMetadata, [metadata]),
              ),
            ),
          )
          as _i4.Future<_i7.FullMetadata>);

  @override
  _i6.DownloadTask writeToFile(_i10.File? file) =>
      (super.noSuchMethod(
            Invocation.method(#writeToFile, [file]),
            returnValue: _FakeDownloadTask_10(
              this,
              Invocation.method(#writeToFile, [file]),
            ),
          )
          as _i6.DownloadTask);
}

/// A class which mocks [UploadTask].
///
/// See the documentation for Mockito's code generation for more information.
class MockUploadTask extends _i1.Mock implements _i6.UploadTask {
  MockUploadTask() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.FirebaseStorage get storage =>
      (super.noSuchMethod(
            Invocation.getter(#storage),
            returnValue: _FakeFirebaseStorage_6(
              this,
              Invocation.getter(#storage),
            ),
          )
          as _i6.FirebaseStorage);

  @override
  _i4.Stream<_i6.TaskSnapshot> get snapshotEvents =>
      (super.noSuchMethod(
            Invocation.getter(#snapshotEvents),
            returnValue: _i4.Stream<_i6.TaskSnapshot>.empty(),
          )
          as _i4.Stream<_i6.TaskSnapshot>);

  @override
  _i6.TaskSnapshot get snapshot =>
      (super.noSuchMethod(
            Invocation.getter(#snapshot),
            returnValue: _FakeTaskSnapshot_11(
              this,
              Invocation.getter(#snapshot),
            ),
          )
          as _i6.TaskSnapshot);

  @override
  _i4.Future<bool> pause() =>
      (super.noSuchMethod(
            Invocation.method(#pause, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> resume() =>
      (super.noSuchMethod(
            Invocation.method(#resume, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> cancel() =>
      (super.noSuchMethod(
            Invocation.method(#cancel, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Stream<_i6.TaskSnapshot> asStream() =>
      (super.noSuchMethod(
            Invocation.method(#asStream, []),
            returnValue: _i4.Stream<_i6.TaskSnapshot>.empty(),
          )
          as _i4.Stream<_i6.TaskSnapshot>);

  @override
  _i4.Future<_i6.TaskSnapshot> catchError(
    Function? onError, {
    bool Function(Object)? test,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#catchError, [onError], {#test: test}),
            returnValue: _i4.Future<_i6.TaskSnapshot>.value(
              _FakeTaskSnapshot_11(
                this,
                Invocation.method(#catchError, [onError], {#test: test}),
              ),
            ),
          )
          as _i4.Future<_i6.TaskSnapshot>);

  @override
  _i4.Future<S> then<S>(
    _i4.FutureOr<S> Function(_i6.TaskSnapshot)? onValue, {
    Function? onError,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#then, [onValue], {#onError: onError}),
            returnValue:
                _i13.ifNotNull(
                  _i13.dummyValueOrNull<S>(
                    this,
                    Invocation.method(#then, [onValue], {#onError: onError}),
                  ),
                  (S v) => _i4.Future<S>.value(v),
                ) ??
                _FakeFuture_12<S>(
                  this,
                  Invocation.method(#then, [onValue], {#onError: onError}),
                ),
          )
          as _i4.Future<S>);

  @override
  _i4.Future<_i6.TaskSnapshot> whenComplete(
    _i4.FutureOr<dynamic> Function()? action,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#whenComplete, [action]),
            returnValue: _i4.Future<_i6.TaskSnapshot>.value(
              _FakeTaskSnapshot_11(
                this,
                Invocation.method(#whenComplete, [action]),
              ),
            ),
          )
          as _i4.Future<_i6.TaskSnapshot>);

  @override
  _i4.Future<_i6.TaskSnapshot> timeout(
    Duration? timeLimit, {
    _i4.FutureOr<_i6.TaskSnapshot> Function()? onTimeout,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#timeout, [timeLimit], {#onTimeout: onTimeout}),
            returnValue: _i4.Future<_i6.TaskSnapshot>.value(
              _FakeTaskSnapshot_11(
                this,
                Invocation.method(
                  #timeout,
                  [timeLimit],
                  {#onTimeout: onTimeout},
                ),
              ),
            ),
          )
          as _i4.Future<_i6.TaskSnapshot>);
}

/// A class which mocks [TaskSnapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskSnapshot extends _i1.Mock implements _i6.TaskSnapshot {
  MockTaskSnapshot() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.FirebaseStorage get storage =>
      (super.noSuchMethod(
            Invocation.getter(#storage),
            returnValue: _FakeFirebaseStorage_6(
              this,
              Invocation.getter(#storage),
            ),
          )
          as _i6.FirebaseStorage);

  @override
  int get bytesTransferred =>
      (super.noSuchMethod(Invocation.getter(#bytesTransferred), returnValue: 0)
          as int);

  @override
  _i6.Reference get ref =>
      (super.noSuchMethod(
            Invocation.getter(#ref),
            returnValue: _FakeReference_5(this, Invocation.getter(#ref)),
          )
          as _i6.Reference);

  @override
  _i7.TaskState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _i7.TaskState.paused,
          )
          as _i7.TaskState);

  @override
  int get totalBytes =>
      (super.noSuchMethod(Invocation.getter(#totalBytes), returnValue: 0)
          as int);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i9.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified =>
      (super.noSuchMethod(Invocation.getter(#emailVerified), returnValue: false)
          as bool);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);

  @override
  _i8.UserMetadata get metadata =>
      (super.noSuchMethod(
            Invocation.getter(#metadata),
            returnValue: _FakeUserMetadata_13(
              this,
              Invocation.getter(#metadata),
            ),
          )
          as _i8.UserMetadata);

  @override
  List<_i8.UserInfo> get providerData =>
      (super.noSuchMethod(
            Invocation.getter(#providerData),
            returnValue: <_i8.UserInfo>[],
          )
          as List<_i8.UserInfo>);

  @override
  String get uid =>
      (super.noSuchMethod(
            Invocation.getter(#uid),
            returnValue: _i13.dummyValue<String>(this, Invocation.getter(#uid)),
          )
          as String);

  @override
  _i9.MultiFactor get multiFactor =>
      (super.noSuchMethod(
            Invocation.getter(#multiFactor),
            returnValue: _FakeMultiFactor_14(
              this,
              Invocation.getter(#multiFactor),
            ),
          )
          as _i9.MultiFactor);

  @override
  _i4.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdToken, [forceRefresh]),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<_i8.IdTokenResult> getIdTokenResult([
    bool? forceRefresh = false,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdTokenResult, [forceRefresh]),
            returnValue: _i4.Future<_i8.IdTokenResult>.value(
              _FakeIdTokenResult_15(
                this,
                Invocation.method(#getIdTokenResult, [forceRefresh]),
              ),
            ),
          )
          as _i4.Future<_i8.IdTokenResult>);

  @override
  _i4.Future<_i9.UserCredential> linkWithCredential(
    _i8.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithCredential, [credential]),
            returnValue: _i4.Future<_i9.UserCredential>.value(
              _FakeUserCredential_16(
                this,
                Invocation.method(#linkWithCredential, [credential]),
              ),
            ),
          )
          as _i4.Future<_i9.UserCredential>);

  @override
  _i4.Future<_i9.UserCredential> linkWithProvider(_i8.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithProvider, [provider]),
            returnValue: _i4.Future<_i9.UserCredential>.value(
              _FakeUserCredential_16(
                this,
                Invocation.method(#linkWithProvider, [provider]),
              ),
            ),
          )
          as _i4.Future<_i9.UserCredential>);

  @override
  _i4.Future<_i9.UserCredential> reauthenticateWithProvider(
    _i8.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithProvider, [provider]),
            returnValue: _i4.Future<_i9.UserCredential>.value(
              _FakeUserCredential_16(
                this,
                Invocation.method(#reauthenticateWithProvider, [provider]),
              ),
            ),
          )
          as _i4.Future<_i9.UserCredential>);

  @override
  _i4.Future<_i9.UserCredential> reauthenticateWithPopup(
    _i8.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithPopup, [provider]),
            returnValue: _i4.Future<_i9.UserCredential>.value(
              _FakeUserCredential_16(
                this,
                Invocation.method(#reauthenticateWithPopup, [provider]),
              ),
            ),
          )
          as _i4.Future<_i9.UserCredential>);

  @override
  _i4.Future<void> reauthenticateWithRedirect(_i8.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithRedirect, [provider]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i9.UserCredential> linkWithPopup(_i8.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPopup, [provider]),
            returnValue: _i4.Future<_i9.UserCredential>.value(
              _FakeUserCredential_16(
                this,
                Invocation.method(#linkWithPopup, [provider]),
              ),
            ),
          )
          as _i4.Future<_i9.UserCredential>);

  @override
  _i4.Future<void> linkWithRedirect(_i8.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithRedirect, [provider]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i9.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i9.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i4.Future<_i9.ConfirmationResult>.value(
              _FakeConfirmationResult_17(
                this,
                Invocation.method(#linkWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i4.Future<_i9.ConfirmationResult>);

  @override
  _i4.Future<_i9.UserCredential> reauthenticateWithCredential(
    _i8.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithCredential, [credential]),
            returnValue: _i4.Future<_i9.UserCredential>.value(
              _FakeUserCredential_16(
                this,
                Invocation.method(#reauthenticateWithCredential, [credential]),
              ),
            ),
          )
          as _i4.Future<_i9.UserCredential>);

  @override
  _i4.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> sendEmailVerification([
    _i8.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, [actionCodeSettings]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i9.User> unlink(String? providerId) =>
      (super.noSuchMethod(
            Invocation.method(#unlink, [providerId]),
            returnValue: _i4.Future<_i9.User>.value(
              _FakeUser_18(this, Invocation.method(#unlink, [providerId])),
            ),
          )
          as _i4.Future<_i9.User>);

  @override
  _i4.Future<void> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updatePhoneNumber(
    _i8.PhoneAuthCredential? phoneCredential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneNumber, [phoneCredential]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#updateDisplayName, [displayName]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updatePhotoURL(String? photoURL) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhotoURL, [photoURL]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateProfile({String? displayName, String? photoURL}) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #displayName: displayName,
              #photoURL: photoURL,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i8.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#verifyBeforeUpdateEmail, [
              newEmail,
              actionCodeSettings,
            ]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i9.FirebaseAuth {
  MockFirebaseAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_3(this, Invocation.getter(#app)),
          )
          as _i5.FirebaseApp);

  @override
  set app(_i5.FirebaseApp? value) => super.noSuchMethod(
    Invocation.setter(#app, value),
    returnValueForMissingStub: null,
  );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
    Invocation.setter(#tenantId, tenantId),
    returnValueForMissingStub: null,
  );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
    Invocation.setter(#customAuthDomain, customAuthDomain),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i4.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #useAuthEmulator,
              [host, port],
              {#automaticHostMapping: automaticHostMapping},
            ),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> applyActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#applyActionCode, [code]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i8.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#checkActionCode, [code]),
            returnValue: _i4.Future<_i8.ActionCodeInfo>.value(
              _FakeActionCodeInfo_19(
                this,
                Invocation.method(#checkActionCode, [code]),
              ),
            ),
          )
          as _i4.Future<_i8.ActionCodeInfo>);

  @override
  _i4.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#confirmPasswordReset, [], {
              #code: code,
              #newPassword: newPassword,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i9.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUserWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i4.Future<_i9.UserCredential>.value(
              _FakeUserCredential_16(
                this,
                Invocation.method(#createUserWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i4.Future<_i9.UserCredential>);

  @override
  _i4.Future<_i9.UserCredential> getRedirectResult() =>
      (super.noSuchMethod(
            Invocation.method(#getRedirectResult, []),
            returnValue: _i4.Future<_i9.UserCredential>.value(
              _FakeUserCredential_16(
                this,
                Invocation.method(#getRedirectResult, []),
              ),
            ),
          )
          as _i4.Future<_i9.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) =>
      (super.noSuchMethod(
            Invocation.method(#isSignInWithEmailLink, [emailLink]),
            returnValue: false,
          )
          as bool);

  @override
  _i4.Stream<_i9.User?> authStateChanges() =>
      (super.noSuchMethod(
            Invocation.method(#authStateChanges, []),
            returnValue: _i4.Stream<_i9.User?>.empty(),
          )
          as _i4.Stream<_i9.User?>);

  @override
  _i4.Stream<_i9.User?> idTokenChanges() =>
      (super.noSuchMethod(
            Invocation.method(#idTokenChanges, []),
            returnValue: _i4.Stream<_i9.User?>.empty(),
          )
          as _i4.Stream<_i9.User?>);

  @override
  _i4.Stream<_i9.User?> userChanges() =>
      (super.noSuchMethod(
            Invocation.method(#userChanges, []),
            returnValue: _i4.Stream<_i9.User?>.empty(),
          )
          as _i4.Stream<_i9.User?>);

  @override
  _i4.Future<void> sendPasswordResetEmail({
    required String? email,
    _i8.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i8.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendSignInLinkToEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setLanguageCode(String? languageCode) =>
      (super.noSuchMethod(
            Invocation.method(#setLanguageCode, [languageCode]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setSettings, [], {
              #appVerificationDisabledForTesting:
                  appVerificationDisabledForTesting,
              #userAccessGroup: userAccessGroup,
              #phoneNumber: phoneNumber,
              #smsCode: smsCode,
              #forceRecaptchaFlow: forceRecaptchaFlow,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setPersistence(_i8.Persistence? persistence) =>
      (super.noSuchMethod(
            Invocation.method(#setPersistence, [persistence]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i9.UserCredential> signInAnonymously() =>
      (super.noSuchMethod(
            Invocation.method(#signInAnonymously, []),
            returnValue: _i4.Future<_i9.UserCredential>.value(
              _FakeUserCredential_16(
                this,
                Invocation.method(#signInAnonymously, []),
              ),
            ),
          )
          as _i4.Future<_i9.UserCredential>);

  @override
  _i4.Future<_i9.UserCredential> signInWithCredential(
    _i8.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCredential, [credential]),
            returnValue: _i4.Future<_i9.UserCredential>.value(
              _FakeUserCredential_16(
                this,
                Invocation.method(#signInWithCredential, [credential]),
              ),
            ),
          )
          as _i4.Future<_i9.UserCredential>);

  @override
  _i4.Future<_i9.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCustomToken, [token]),
            returnValue: _i4.Future<_i9.UserCredential>.value(
              _FakeUserCredential_16(
                this,
                Invocation.method(#signInWithCustomToken, [token]),
              ),
            ),
          )
          as _i4.Future<_i9.UserCredential>);

  @override
  _i4.Future<_i9.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i4.Future<_i9.UserCredential>.value(
              _FakeUserCredential_16(
                this,
                Invocation.method(#signInWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i4.Future<_i9.UserCredential>);

  @override
  _i4.Future<_i9.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailLink, [], {
              #email: email,
              #emailLink: emailLink,
            }),
            returnValue: _i4.Future<_i9.UserCredential>.value(
              _FakeUserCredential_16(
                this,
                Invocation.method(#signInWithEmailLink, [], {
                  #email: email,
                  #emailLink: emailLink,
                }),
              ),
            ),
          )
          as _i4.Future<_i9.UserCredential>);

  @override
  _i4.Future<_i9.UserCredential> signInWithProvider(
    _i8.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithProvider, [provider]),
            returnValue: _i4.Future<_i9.UserCredential>.value(
              _FakeUserCredential_16(
                this,
                Invocation.method(#signInWithProvider, [provider]),
              ),
            ),
          )
          as _i4.Future<_i9.UserCredential>);

  @override
  _i4.Future<_i9.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i9.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i4.Future<_i9.ConfirmationResult>.value(
              _FakeConfirmationResult_17(
                this,
                Invocation.method(#signInWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
          )
          as _i4.Future<_i9.ConfirmationResult>);

  @override
  _i4.Future<_i9.UserCredential> signInWithPopup(_i8.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPopup, [provider]),
            returnValue: _i4.Future<_i9.UserCredential>.value(
              _FakeUserCredential_16(
                this,
                Invocation.method(#signInWithPopup, [provider]),
              ),
            ),
          )
          as _i4.Future<_i9.UserCredential>);

  @override
  _i4.Future<void> signInWithRedirect(_i8.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithRedirect, [provider]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPasswordResetCode, [code]),
            returnValue: _i4.Future<String>.value(
              _i13.dummyValue<String>(
                this,
                Invocation.method(#verifyPasswordResetCode, [code]),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i8.PhoneMultiFactorInfo? multiFactorInfo,
    required _i8.PhoneVerificationCompleted? verificationCompleted,
    required _i8.PhoneVerificationFailed? verificationFailed,
    required _i8.PhoneCodeSent? codeSent,
    required _i8.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i8.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPhoneNumber, [], {
              #phoneNumber: phoneNumber,
              #multiFactorInfo: multiFactorInfo,
              #verificationCompleted: verificationCompleted,
              #verificationFailed: verificationFailed,
              #codeSent: codeSent,
              #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
              #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
              #timeout: timeout,
              #forceResendingToken: forceResendingToken,
              #multiFactorSession: multiFactorSession,
            }),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> revokeTokenWithAuthorizationCode(
    String? authorizationCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#revokeTokenWithAuthorizationCode, [
              authorizationCode,
            ]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> initializeRecaptchaConfig() =>
      (super.noSuchMethod(
            Invocation.method(#initializeRecaptchaConfig, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i8.PasswordValidationStatus> validatePassword(
    _i9.FirebaseAuth? auth,
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#validatePassword, [auth, password]),
            returnValue: _i4.Future<_i8.PasswordValidationStatus>.value(
              _FakePasswordValidationStatus_20(
                this,
                Invocation.method(#validatePassword, [auth, password]),
              ),
            ),
          )
          as _i4.Future<_i8.PasswordValidationStatus>);
}

/// A class which mocks [Directory].
///
/// See the documentation for Mockito's code generation for more information.
class MockDirectory extends _i1.Mock implements _i10.Directory {
  MockDirectory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get path =>
      (super.noSuchMethod(
            Invocation.getter(#path),
            returnValue: _i13.dummyValue<String>(
              this,
              Invocation.getter(#path),
            ),
          )
          as String);

  @override
  Uri get uri =>
      (super.noSuchMethod(
            Invocation.getter(#uri),
            returnValue: _FakeUri_21(this, Invocation.getter(#uri)),
          )
          as Uri);

  @override
  _i10.Directory get absolute =>
      (super.noSuchMethod(
            Invocation.getter(#absolute),
            returnValue: _FakeDirectory_22(this, Invocation.getter(#absolute)),
          )
          as _i10.Directory);

  @override
  bool get isAbsolute =>
      (super.noSuchMethod(Invocation.getter(#isAbsolute), returnValue: false)
          as bool);

  @override
  _i10.Directory get parent =>
      (super.noSuchMethod(
            Invocation.getter(#parent),
            returnValue: _FakeDirectory_22(this, Invocation.getter(#parent)),
          )
          as _i10.Directory);

  @override
  _i4.Future<_i10.Directory> create({bool? recursive = false}) =>
      (super.noSuchMethod(
            Invocation.method(#create, [], {#recursive: recursive}),
            returnValue: _i4.Future<_i10.Directory>.value(
              _FakeDirectory_22(
                this,
                Invocation.method(#create, [], {#recursive: recursive}),
              ),
            ),
          )
          as _i4.Future<_i10.Directory>);

  @override
  void createSync({bool? recursive = false}) => super.noSuchMethod(
    Invocation.method(#createSync, [], {#recursive: recursive}),
    returnValueForMissingStub: null,
  );

  @override
  _i4.Future<_i10.Directory> createTemp([String? prefix]) =>
      (super.noSuchMethod(
            Invocation.method(#createTemp, [prefix]),
            returnValue: _i4.Future<_i10.Directory>.value(
              _FakeDirectory_22(this, Invocation.method(#createTemp, [prefix])),
            ),
          )
          as _i4.Future<_i10.Directory>);

  @override
  _i10.Directory createTempSync([String? prefix]) =>
      (super.noSuchMethod(
            Invocation.method(#createTempSync, [prefix]),
            returnValue: _FakeDirectory_22(
              this,
              Invocation.method(#createTempSync, [prefix]),
            ),
          )
          as _i10.Directory);

  @override
  _i4.Future<String> resolveSymbolicLinks() =>
      (super.noSuchMethod(
            Invocation.method(#resolveSymbolicLinks, []),
            returnValue: _i4.Future<String>.value(
              _i13.dummyValue<String>(
                this,
                Invocation.method(#resolveSymbolicLinks, []),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  String resolveSymbolicLinksSync() =>
      (super.noSuchMethod(
            Invocation.method(#resolveSymbolicLinksSync, []),
            returnValue: _i13.dummyValue<String>(
              this,
              Invocation.method(#resolveSymbolicLinksSync, []),
            ),
          )
          as String);

  @override
  _i4.Future<_i10.Directory> rename(String? newPath) =>
      (super.noSuchMethod(
            Invocation.method(#rename, [newPath]),
            returnValue: _i4.Future<_i10.Directory>.value(
              _FakeDirectory_22(this, Invocation.method(#rename, [newPath])),
            ),
          )
          as _i4.Future<_i10.Directory>);

  @override
  _i10.Directory renameSync(String? newPath) =>
      (super.noSuchMethod(
            Invocation.method(#renameSync, [newPath]),
            returnValue: _FakeDirectory_22(
              this,
              Invocation.method(#renameSync, [newPath]),
            ),
          )
          as _i10.Directory);

  @override
  _i4.Future<_i10.FileSystemEntity> delete({bool? recursive = false}) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {#recursive: recursive}),
            returnValue: _i4.Future<_i10.FileSystemEntity>.value(
              _FakeFileSystemEntity_23(
                this,
                Invocation.method(#delete, [], {#recursive: recursive}),
              ),
            ),
          )
          as _i4.Future<_i10.FileSystemEntity>);

  @override
  void deleteSync({bool? recursive = false}) => super.noSuchMethod(
    Invocation.method(#deleteSync, [], {#recursive: recursive}),
    returnValueForMissingStub: null,
  );

  @override
  _i4.Stream<_i10.FileSystemEntity> list({
    bool? recursive = false,
    bool? followLinks = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#list, [], {
              #recursive: recursive,
              #followLinks: followLinks,
            }),
            returnValue: _i4.Stream<_i10.FileSystemEntity>.empty(),
          )
          as _i4.Stream<_i10.FileSystemEntity>);

  @override
  List<_i10.FileSystemEntity> listSync({
    bool? recursive = false,
    bool? followLinks = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#listSync, [], {
              #recursive: recursive,
              #followLinks: followLinks,
            }),
            returnValue: <_i10.FileSystemEntity>[],
          )
          as List<_i10.FileSystemEntity>);

  @override
  _i4.Future<bool> exists() =>
      (super.noSuchMethod(
            Invocation.method(#exists, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  bool existsSync() =>
      (super.noSuchMethod(
            Invocation.method(#existsSync, []),
            returnValue: false,
          )
          as bool);

  @override
  _i4.Future<_i10.FileStat> stat() =>
      (super.noSuchMethod(
            Invocation.method(#stat, []),
            returnValue: _i4.Future<_i10.FileStat>.value(
              _FakeFileStat_24(this, Invocation.method(#stat, [])),
            ),
          )
          as _i4.Future<_i10.FileStat>);

  @override
  _i10.FileStat statSync() =>
      (super.noSuchMethod(
            Invocation.method(#statSync, []),
            returnValue: _FakeFileStat_24(
              this,
              Invocation.method(#statSync, []),
            ),
          )
          as _i10.FileStat);

  @override
  _i4.Stream<_i10.FileSystemEvent> watch({
    int? events = 15,
    bool? recursive = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#watch, [], {
              #events: events,
              #recursive: recursive,
            }),
            returnValue: _i4.Stream<_i10.FileSystemEvent>.empty(),
          )
          as _i4.Stream<_i10.FileSystemEvent>);
}
